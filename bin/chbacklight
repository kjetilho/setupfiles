#! /usr/bin/perl

# Requires sudoers rule:
#
# Cmnd_Alias BACKLIGHT = /usr/libexec/gsd-backlight-helper
# kjetilho  ALL = (root) NOPASSWD: BACKLIGHT

use warnings;
use strict;
use English;

sub usage {
    print STDERR "Usage: $0 [+adjustment|-adjustment|brightness]\n";
    print STDERR "All values should be given in percent.\n";
    exit 64
}

my $debug;

sub debug {
    my $fmt = shift;
    if ($debug) {
        printf STDERR "DEBUG: $fmt\n", @_;
    }
}

my $tmpdir = "/run/user/$UID";

if (! -w "$tmpdir") {
    $tmpdir = "/tmp/$UID";
    mkdir($tmpdir) unless -d $tmpdir
}

my $maxfile = "$tmpdir/backlight.max";
my $curfile = "$tmpdir/backlight.cur";

my ($max, $cur);

if (-r $maxfile) {
    $max = slurp($maxfile);
} else {
    $max = `/usr/libexec/gsd-backlight-helper --get-max-brightness`;
    store($maxfile, $max);
}

if (-r $curfile) {
    $cur = slurp($curfile);
} else {
    $cur = `/usr/libexec/gsd-backlight-helper --get-brightness`;
    store($curfile, $cur);
}

if (@ARGV && $ARGV[0] eq '--debug') {
    $debug++;
    shift;
}

usage() if @ARGV > 1;
my $newval;

if (@ARGV == 0) {
    print int($cur / $max * 100), "\n";
    exit(0);
}

if ($ARGV[0] =~ /^\+(\d+)$/) {
    if ($cur == $max) {
        debug("Already maxed at %d/%d", $cur, $max);
        exit(0);
    }
    $newval = int( ($cur/$max * 100 + $1 + 0.5) / 100 * $max);
    if ($newval == $cur) {
        debug("Increment %d%% is too small to change value, bumping", $1);
        ++$newval;
    }
} elsif ($ARGV[0] =~ /^-(\d+)$/) {
    if ($cur == 0) {
        debug("Already at zero");
        exit(0);
    }
    $newval = int( ($cur/$max * 100 - $1 + 0.5) / 100 * $max);
    if ($newval == $cur) {
        debug("Decrement %d%% is too small to change value, bumping", $1);
        --$newval;
    } elsif ($newval < 0) {
        debug("Hit bottom");
        $newval = 0;
    }
} elsif ($ARGV[0] =~ /^(\d+)$/) {
    usage() if $1 > 100;
    $newval = int( ($1 + 0.5) / 100 * $max);
} else {
    usage();
}
if ($newval != $cur) {
    debug("Setting brightness to %d (was %d)", $newval, $cur);
    system("sudo /usr/libexec/gsd-backlight-helper --set-brightness $newval");
    my $newcur = `/usr/libexec/gsd-backlight-helper --get-brightness`;
    debug("New brightness is %d", $newcur);
    store($curfile, $newcur);
    system("pkill -USR1 -x i3status");
}

sub slurp {
    my $fn = shift;
    open (my $f, $fn)
        or die "$fn: $!\n";
    my $output = join('', <$f>);
    close($f);
    return $output;
}

sub store {
    my $fn = shift;
    open (my $f, ">", "$fn.tmp")
        or die "$fn.tmp: $!\n";
    print $f @_;
    close($f) && rename("$fn.tmp", $fn)
        or die "$fn: $!\n";
}
