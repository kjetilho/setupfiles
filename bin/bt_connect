#! /usr/bin/perl

use warnings;
use strict;
use Getopt::Long;
use IPC::Open2;

my $action = 'toggle';
my $debug;
# Reverse prefered order, since -d adds to end of array
my @lookfor = ('M9', 'Jaybird X2', 'ATH-ANC40BT');

sub usage {
    print STDERR "Usage: $0 [--debug] [-d DEV] {--connect|--disconnect|--toggle}\n";
    print "Known devices to look for are: ", join(" ", reverse @lookfor), "\n";
    exit(64);
}

my $devname;

GetOptions("device|d=s", \@lookfor,
           "connect", sub { $action = 'connect' },
           "disconnect", sub { $action = 'disconnect' },
           "toggle", sub { $action = 'toggle' },
           "debug", \$debug,
    ) or usage();

open2(my $chld_out, my $chld_in, 'bluetoothctl')
    or die "bluetoothctl failed $!\n";
close($chld_in);

@lookfor = reverse @lookfor;

my %dev;

while (<$chld_out>) {
    next if /Controller/;
    if (/Device ([0-9A-F:]{17})\s(.*)/) {
        $dev{$2} = $1;
        print STDERR "$2 is $1\n" if $debug;
    } else {
        close($chld_out);
        last;
    }
}

my $devid;

for my $d (@lookfor) {
    next unless defined $dev{$d};
    $devname = $d;
    last;
}

unless (defined $dev{$devname}) {
    print "No device found.  These bluetooth devices were seen:\n";
    for my $n (sort keys %dev) {
	print "  $n\n";
    }
    exit(1);
}

print STDERR "$devname is $dev{$devname}\n"
    if $debug;

my $pid = open2($chld_out, $chld_in, 'bluetoothctl')
    or die "open2() failed $!";

if ($action eq 'toggle') {
    print $chld_in "info $dev{$devname}\n";
    while (<$chld_out>) {
        if (/Connected: yes/) {
            $action = 'disconnect';
            last;
        } elsif (/Connected: no/) {
            $action = 'connect';
            last;
        }
    }
}
print STDOUT "${action}ing $devname\n";

print $chld_in "$action $dev{$devname}\n";
close($chld_in);
my @slurp = <$chld_out>;
close($chld_out);
