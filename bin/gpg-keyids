#! /usr/bin/perl

use warnings;
use strict;

for my $key (@ARGV) {
    if (-f $key) {
        my $slurp = `gpg $key 2>/dev/null`;
        if ($slurp =~ /\b([0-9A-F]{40})\b/) {
            $key = $1;
        } else {
            warn "$key: did not find key in gpg output\n";
            next;
        }
    }
    if ($key !~ /^(0x)?([0-9a-f]{8,})$/i) {
        my $slurp = `gpg --with-colons --fingerprint $key`;
        if ($slurp =~ /^fpr:+([0-9A-Z]{40}):/m) {
            $key = $1;
        }
    }
    if ($key =~ /^(0x)?([0-9a-f]{8,})$/i) {
        $key = lc $2;
        my $len = length($key);
        unless ($len == 8 || $len == 16 || $len == 40) {
            warn "$key: invalid length $len\n";
            if ($len < 16) {
                $key = substr($key, -8);
            } elsif ($len < 40) {
                $key = substr($key, -16);
            } elsif ($len > 40) {
                next;
            }
            $len = length($key);
        }
        if ($len < 40) {
            my $slurp = `gpg --with-colons --fingerprint $key`;
            if ($slurp =~ /^fpr:+([0-9A-Z]{40}):/m) {
                $key = $1;
                $len = length($key);
            }
        }
        if ($len > 16) {
            print join(" ", $key =~ /(....)/g), "\n";
            printf("%49s\n", $key);
        }
        if ($len > 8) {
            printf("%49s\n", substr($key, -16));
        }
        printf("%49s\n", substr($key, -8));
    }
}
